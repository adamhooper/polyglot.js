"use strict";var warning=require("warning");var warn=function warn(message){warning(false,message)};function has(object,key){return Object.prototype.hasOwnProperty.call(object,key)}function forEach(arrayOrObject,callback,context){var ctx=typeof context==="undefined"?this:context;switch(Object.prototype.toString.call(arrayOrObject)){case"[object Array]":for(var i=0;i<arrayOrObject.length;i+=1){callback.call(ctx,arrayOrObject[i])}break;case"[object Object]":for(var key in arrayOrObject){if(has(arrayOrObject,key)){var value=arrayOrObject[key];callback.call(ctx,value,key)}}break;default:}}var replace=String.prototype.replace;function Polyglot(options){var opts=options||{};this.phrases={};this.extend(opts.phrases||{});this.currentLocale=opts.locale||"en";this.numberFormat=opts.numberFormat||String;this.allowMissing=!!opts.allowMissing;this.warn=opts.warn||warn}Polyglot.prototype.locale=function(newLocale){if(newLocale){this.currentLocale=newLocale}return this.currentLocale};Polyglot.prototype.extend=function(morePhrases,prefix){forEach(morePhrases,function(phrase,key){var prefixedKey=prefix?prefix+"."+key:key;if(typeof phrase==="object"){this.extend(phrase,prefixedKey)}else{this.phrases[prefixedKey]=phrase}},this)};Polyglot.prototype.unset=function(morePhrases,prefix){if(typeof morePhrases==="string"){delete this.phrases[morePhrases]}else{forEach(morePhrases,function(phrase,key){var prefixedKey=prefix?prefix+"."+key:key;if(typeof phrase==="object"){this.unset(phrase,prefixedKey)}else{delete this.phrases[prefixedKey]}},this)}};Polyglot.prototype.clear=function(){this.phrases={}};Polyglot.prototype.replace=function(newPhrases){this.clear();this.extend(newPhrases)};Polyglot.prototype.t=function(key,options){var phrase,result;var opts=options==null?{}:options;if(typeof opts==="number"){opts={smart_count:opts}}if(typeof this.phrases[key]==="string"){phrase=this.phrases[key]}else if(typeof opts._==="string"){phrase=opts._}else if(this.allowMissing){phrase=key}else{this.warn('Missing translation for key: "'+key+'"');result=key}if(typeof phrase==="string"){result=choosePluralForm(phrase,this.currentLocale,opts.smart_count);result=interpolate(result,opts,this.numberFormat)}return result};Polyglot.prototype.has=function(key){return has(this.phrases,key)};var delimeter="||||";var pluralTypes={arabic:function(n){if(n<3){return n}if(n%100>=3&&n%100<=10)return 3;return n%100>=11?4:5},chinese:function(){return 0},german:function(n){return n!==1?1:0},french:function(n){return n>1?1:0},russian:function(n){if(n%10===1&&n%100!==11){return 0}return n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2},czech:function(n){if(n===1){return 0}return n>=2&&n<=4?1:2},polish:function(n){if(n===1){return 0}return n%10>=2&&n%10<=4&&(n%100<10||n%100>=20)?1:2},icelandic:function(n){return n%10!==1||n%100===11?1:0}};var pluralTypeToLanguages={arabic:["ar"],chinese:["fa","id","ja","ko","lo","ms","th","tr","zh"],german:["da","de","en","es","fi","el","he","hu","it","nl","no","pt","sv"],french:["fr","tl","pt-br"],russian:["hr","ru","lt"],czech:["cs","sk"],polish:["pl"],icelandic:["is"]};function langToTypeMap(mapping){var ret={};forEach(mapping,function(langs,type){forEach(langs,function(lang){ret[lang]=type})});return ret}var trimRe=/^\s+|\s+$/g;function trim(str){return replace.call(str,trimRe,"")}function pluralTypeName(locale){var langToPluralType=langToTypeMap(pluralTypeToLanguages);return langToPluralType[locale]||langToPluralType[locale.split(/-/,1)[0]]||langToPluralType.en}function pluralTypeIndex(locale,count){return pluralTypes[pluralTypeName(locale)](count)}function choosePluralForm(text,locale,count){if(count!=null&&text){var texts=text.split(delimeter);var chosenText=texts[pluralTypeIndex(locale,count)]||texts[0];return trim(chosenText)}return text}var dollarRegex=/\$/g;var dollarBillsYall="$$";var tokenRegex=/%\{(.*?)\}/g;function interpolate(phrase,options,numberFormat){return phrase.replace(tokenRegex,function(expression,argument){if(!has(options,argument)){return""}var replacement=options[argument];if(typeof replacement==="number"){replacement=numberFormat(replacement)}return replace.call(replacement,dollarRegex,dollarBillsYall)})}module.exports=Polyglot;